<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cadastre-se</title>

    <link rel="stylesheet" type="text/css" href="cadastro2.css">

</head>
<body>
<header>
    <div class="divlogo">
        <a href="/">
          <img src="IMAGENS/logo.png" class="logo">
        </a>
      </div>
    </header>

      <div id="cadastro" class="submenu">  
        <form action="/Cadastro" method="post" class="formulario" id="formCadastro">

          <h1> CRIE SUA CONTA </h1>

  <label for="nomeCompleto">Nome Completo:</label>
  <input placeholder="Ex: João da Silva" oninput="validarNomeCompleto(this)" type="text" name="username" id="username" required><br><br>

  <label for="email">Email:</label>
  <input placeholder="Ex: exemplo@email.com" oninput="validarEmail(this)" type="text" name="email" id="email" required><br><br>

  <label for="cpf">CPF:</label>
  <input maxlength="14" placeholder="000.000.000-00" oninput="formatarCPF(this)" type="text" name="cpf" id="cpf" required><br><br>


  <label for="dataNascimento">Data de Nascimento:</label>
  <input placeholder="Data de nascimento ex.: 11/05/1980" type="date" name="datanascimento" id="datanascimento" required><br><br>

  <label for="sexo">Selecione o Sexo que se identifica:</label>
  <select placeholder="Sexo" type="text" name="sexo" id="sexo" required>
    <option value="" disabled selected>Selecione o Sexo</option>
    <option value="Masculino">Masculino</option>
    <option value="Feminino">Feminino</option>
    <option value="N/A">Prefiro não me identificar</option>
  </select><br><br>

  <label for="senha">Senha:</label>
  <input placeholder="Digite sua Senha" type="password" name="password" id="password" pattern="^{8,}$" required title="Mínimo, 8 caracteres."required><br><br>

  <button type="submit" class="Cadastro" value="user" >Cadastrar</button>
</form>
      </div>

<script>
  function formatarCPF(input) {
                    let cpfLimpo = input.value.replace(/\D/g, "");
                    
                    if (cpfLimpo.length > 11) {
                        cpfLimpo = cpfLimpo.substring(0, 11);
                    }
            
                    let cpfFormatado = "";
            
                    if (cpfLimpo.length <= 3) {
                        cpfFormatado = cpfLimpo;
                    } else if (cpfLimpo.length <= 6) {
                        cpfFormatado = cpfLimpo.replace(/(\d{3})(\d{0,3})/, "$1.$2");
                    } else if (cpfLimpo.length <= 9) {
                        cpfFormatado = cpfLimpo.replace(/(\d{3})(\d{3})(\d{0,3})/, "$1.$2.$3");
                    } else {
                        cpfFormatado = cpfLimpo.replace(/(\d{3})(\d{3})(\d{3})(\d{0,2})/, "$1.$2.$3-$4");
                    }
            
                    input.value = cpfFormatado;
            
                    if (cpfLimpo.length >= 11) {
                        input.setCustomValidity(""); // CPF completo, sem erro de validação
                    } else {
                        input.setCustomValidity("Informe um CPF válido com 11 dígitos"); // Mensagem de erro de validação
                    }
                }


                function validarNomeCompleto(input) {
                    const nome = input.value;
                    
                    // Verificar se o nome contém apenas letras (a-zA-Z) e pelo menos um espaço em branco
                    const regex = /^[a-zA-Z]+ [a-zA-Z]+$/;
        
                    if (!regex.test(nome)) {
                        // Nome completo inválido
                        input.setCustomValidity("Por favor, insira um nome completo válido contendo apenas letras e pelo menos um espaço.");
                    } else {
                        // Nome completo válido
                        input.setCustomValidity("");
                    }
                }


                function validarEmail(input) {
    const email = input.value;

    // Expressão regular para validar o formato de email
    const regex = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/;

    if (regex.test(email)) {
        input.setCustomValidity(""); // Email válido, sem erro de validação
    } else {
        input.setCustomValidity("Informe um email válido"); // Mensagem de erro de validação
    }
}

function validarSenha(input) {
                const senha = document.getElementById("senha").value;
                const confirmarSenha = document.getElementById("confirmarSenha").value;
            
                if (senha === confirmarSenha) {
                    document.getElementById("senha").setCustomValidity(""); // Senhas iguais, sem erro de validação
                    document.getElementById("confirmarSenha").setCustomValidity(""); // Senhas iguais, sem erro de validação
                } else {
                    document.getElementById("senha").setCustomValidity("As senhas não coincidem"); // Mensagem de erro de validação para a senha
                    document.getElementById("confirmarSenha").setCustomValidity("As senhas não coincidem"); // Mensagem de erro de validação para a confirmação de senha
                }
            }
</script>
</body>

</html>
